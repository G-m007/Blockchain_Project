/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RealEstateBuy, RealEstateBuyInterface } from "../RealEstateBuy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalNumberOfTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "PropertyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PropertyPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "monthlyRent",
        type: "uint256",
      },
    ],
    name: "PropertyRentStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PropertySold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalNumberOfTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "PropertyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RentPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RentWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "SellOrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "SellOrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "SellOrderFulfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "buyFromSellOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "cancelSellOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNumberOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "createProperty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "createSellOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPropertiesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSellOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "propertyId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct RealEstateBuy.SellOrder[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMySellOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "propertyId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct RealEstateBuy.SellOrder[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "getMyTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "getPropertyDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNumberOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "getPropertyRentalInfo",
    outputs: [
      {
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "monthlyRent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRentPayment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRentCollected",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "getPropertySellOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "propertyId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct RealEstateBuy.SellOrder[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "getRentalEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "payRent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "propertiesList",
    outputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNumberOfTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "monthlyRent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRentPayment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRentCollected",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensToPurchase",
        type: "uint256",
      },
    ],
    name: "purchasePropertyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rentalEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sellOrders",
    outputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellPropertyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isRentable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_monthlyRent",
        type: "uint256",
      },
    ],
    name: "setPropertyRentStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenOwnership",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "propertyId",
        type: "uint256",
      },
    ],
    name: "withdrawRentalEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601a576000600355611da390816100208239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630453497c1461168f57806308d320391461164f57806308fa2e20146115fa578063126dbe431461152b5780631a46e42a14611422578063316acf19146113645780633a219c29146111ec578063439930b6146110d55780634a8393f31461105e5780635001901e14610f5d5780635055fd7514610f3f57806358883a1214610f045780636236f3b614610ecf578063730412e814610dfc57806395eccf5a146106dd5780639f83dce1146105a0578063bd4d935914610565578063c386527a14610482578063d2a96e131461038e578063d9e8843f146101e75763f540374b1461010357600080fd5b346101e25760603660031901126101e2576004356024358015158082036101e257604435906101318461185b565b50916008830161014460ff825416611a60565b811561019d57600960409461018e7f46d2791364c324f81eb8dc2a0b9a44e831d00d7bb4909249ac8418330d0ef2399785949061ff00825491151560081b169061ff001916179055565b015582519182526020820152a2005b60405162461bcd60e51b815260206004820152601b60248201527f52656e74206d7573742062652067726561746572207468616e203000000000006044820152606490fd5b600080fd5b60203660031901126101e2576004356101ff8161185b565b5060ff6008820154610212828216611a60565b60081c1615610349576009810154340361030c576102519042600a820155600b810161023f348254611b6b565b90556007600582015491015490611d4d565b60005b6000548110156102df5760008381526002602090815260408083206001600160a01b03851680855292529091205460019291908481610297575b50505001610254565b6102af6040916102aa6102d59434611af1565b611d4d565b9287600052600460205281600020600091878060a01b0316825260205220918254611b6b565b905584808461028e565b827fa0d112ed080c1b1a94b838ad981a23746be2a4670fd4bf157224e72cdd5dfdde6020604051348152a2005b60405162461bcd60e51b8152602060048201526015602482015274125b98dbdc9c9958dd081c995b9d08185b5bdd5b9d605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f50726f7065727479206973206e6f742072656e7461626c6500000000000000006044820152606490fd5b346101e25761039c3661178c565b90600080808061042f60076103b08761185b565b506103c160ff600883015416611a60565b6103cc891515611aa5565b8784526002602090815260408086203387529091528420546103f0908a1115611d01565b87845260026020908152604080862033875290915284208054610414908b90611b5e565b9055600681016104258a8254611b6b565b9055015487611af1565b818115610479575b3390f11561046d576040519182527ff17a6666765db393a6218bb324c4de5cc60c9ee3b981bd102ba416effc13b89560203393a3005b6040513d6000823e3d90fd5b506108fc610437565b346101e25760203660031901126101e257600435806000526004602052604060002060018060a01b03331660005260205260406000205490811561052057806000526004602052604060002060018060a01b033316600052602052600060408120556000808080853382f11561046d576040519182527ff5e26fe9a8e31f0bb4931be55bbdeb0de56186c3267122ad3165b04abfb138c760203393a3005b60405162461bcd60e51b815260206004820152601760248201527f4e6f206561726e696e677320746f2077697468647261770000000000000000006044820152606490fd5b346101e257610573366119e4565b90600052600260205260406000209060018060a01b03166000526020526020604060002054604051908152f35b60203660031901126101e2576004356105bc6001548210611b78565b6105c5816119c5565b50600581016105d760ff825416611bb7565b6002820180546001600160a01b03163314610698576000808080936003870196600188549161061461060d600483015485611af1565b3414611b1a565b0154835260026020908152604080852033865290915283208054909161063991611b6b565b90555481906001600160a01b0316341561068e575b3491f11561046d5760ff19815416905554906040519182527f1ef4fe97bdb02a2f7e90c913cb7fddf2d58510c091ea0126da3146083e58434a60203393a3005b6108fc915061064e565b60405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742062757920796f7572206f776e20746f6b656e730000000000006044820152606490fd5b346101e25760e03660031901126101e2576004356001600160401b0381116101e25761070d903690600401611a0a565b6024356001600160401b0381116101e25761072c903690600401611a0a565b906044356001600160401b0381116101e25761074c903690600401611a0a565b6064356001600160401b0381116101e25761076b903690600401611a0a565b90600054936040516101a081018181106001600160401b03821117610b875760405285815260208101908582526040810183815260608201858152608083019187835260843560a085015260a43560c085015260c43560e08501526001610100850152600161012085015268056bc75e2d6310000061014085015260006101608501526000610180850152600160401b8a1015610b875760018a016000556108128a61185b565b959095610de6578451865551805160018701916001600160401b038211610b8757819061083f84546118ab565b601f8111610d93575b50602090601f8311600114610d2e57600092610d23575b50508160011b916000199060031b1c19161790555b51805160028601916001600160401b038211610b8757819061089684546118ab565b601f8111610cd0575b50602090601f8311600114610c6b57600092610c60575b50508160011b916000199060031b1c19161790555b51805160038501916001600160401b038211610b875781906108ed84546118ab565b601f8111610c0d575b50602090601f8311600114610ba857600092610b9d575b50508160011b916000199060031b1c19161790555b518051906001600160401b038211610b875761094160048501546118ab565b601f8111610b3c575b50602090601f8311600114610a945794610a429794600b610180610a5e96867f3faa87310e0ae4478cf0a91b309858ff15023e2b519b3a24cd8ab3831fc9e3cc9d9b97610a5097610a6c9c600092610a89575b50508160011b916000199060031b1c19161760048501555b60a0810151600585015560c0810151600685015560e08101516007850155610a13600885016109f76101008401511515829060ff801983541691151516179055565b610120830151815461ff00191690151560081b61ff0016179055565b6101408101516009850155610160810151600a850155015191015560405197889760e0895260e08901906117a2565b9087820360208901526117a2565b9085820360408701526117a2565b9083820360608501526117a2565b608435608083015260a43560a083015260c43560c08301520390a2005b01519050388061099d565b9060048501600052806000209160005b601f1985168110610b24575094600b610180610a5e96600187610a50977f3faa87310e0ae4478cf0a91b309858ff15023e2b519b3a24cd8ab3831fc9e3cc9f9d9997610a429f9c610a6c9e99601f19811610610b0b575b505050811b0160048501556109b5565b015160001960f88460031b161c19169055388080610afb565b91926020600181928685015181550194019201610aa4565b600485016000526020600020601f840160051c81019160208510610b7d575b601f0160051c01905b818110610b71575061094a565b60008155600101610b64565b9091508190610b5b565b634e487b7160e01b600052604160045260246000fd5b015190508b8061090d565b60008581528281209350601f198516905b818110610bf55750908460019594939210610bdc575b505050811b019055610922565b015160001960f88460031b161c191690558b8080610bcf565b92936020600181928786015181550195019301610bb9565b909150836000526020600020601f840160051c81019160208510610c56575b90601f859493920160051c01905b818110610c4757506108f6565b60008155849350600101610c3a565b9091508190610c2c565b015190508c806108b6565b60008581528281209350601f198516905b818110610cb85750908460019594939210610c9f575b505050811b0190556108cb565b015160001960f88460031b161c191690558c8080610c92565b92936020600181928786015181550195019301610c7c565b909150836000526020600020601f840160051c81019160208510610d19575b90601f859493920160051c01905b818110610d0a575061089f565b60008155849350600101610cfd565b9091508190610cef565b015190508d8061085f565b60008581528281209350601f198516905b818110610d7b5750908460019594939210610d62575b505050811b019055610874565b015160001960f88460031b161c191690558d8080610d55565b92936020600181928786015181550195019301610d3f565b909150836000526020600020601f840160051c81019160208510610ddc575b90601f859493920160051c01905b818110610dcd5750610848565b60008155849350600101610dc0565b9091508190610db2565b634e487b7160e01b600052600060045260246000fd5b346101e25760003660031901126101e2576001546000805b828110610e9d5750610e2590611c1f565b906000805b828110610e435760405180610e3f86826117e3565b0390f35b60ff6005610e50836119c5565b50015416610e61575b600101610e2a565b90610e95600191610e7a610e74856119c5565b50611cad565b610e848288611c99565b52610e8f8187611c99565b50611bf9565b919050610e59565b60ff6005610eaa836119c5565b50015416610ebb575b600101610e14565b90610ec7600191611bf9565b919050610eb3565b346101e25760203660031901126101e25760048035600090815260209182526040808220338352835290819020549051908152f35b346101e257610f12366119e4565b90600052600460205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346101e25760003660031901126101e2576020600054604051908152f35b346101e25760203660031901126101e257600435600080600154915b8281106110105750610f8a90611c1f565b9160009060005b838110610fa65760405180610e3f87826117e3565b60ff6005610fb3836119c5565b5001541680610ffa575b610fca575b600101610f91565b91610ff2600191610fdd610e74866119c5565b610fe78289611c99565b52610e8f8188611c99565b929050610fc2565b50816001611007836119c5565b50015414610fbd565b60ff600561101d836119c5565b5001541680611048575b611034575b600101610f79565b90611040600191611bf9565b91905061102c565b50836001611055836119c5565b50015414611027565b346101e25760203660031901126101e2576004356001548110156101e25761108760c0916119c5565b5080549060018101549060018060a01b0360028201541660038201549060ff6005600485015494015416936040519586526020860152604085015260608401526080830152151560a0820152f35b346101e25760203660031901126101e2576004356000548110156101e2576110fc9061185b565b50805461110b60018301611921565b9161111860028201611921565b61112460038301611921565b9161113160048201611921565b926005820154936006830154600784015490600885015492600986015494600a87015496600b0154976040519b8c9b8c5260208c016101a090526101a08c01611179916117a2565b8b810360408d015261118a916117a2565b8a810360608c015261119b916117a2565b89810360808b01526111ac916117a2565b9660a089015260c088015260e087015260ff8116151561010087015260081c60ff1615156101208601526101408501526101608401526101808301520390f35b346101e25760603660031901126101e257602435600435604435611211831515611aa5565b816000526002602052604060002060018060a01b03331660005260205261123f836040600020541015611d01565b6003549061124c82611bf9565b60035560405161125b816118e5565b82815260208101908482526040810190338252606081018781526080820185815260a083019160018352600154600160401b811015610b87578060016112a492016001556119c5565b959095610de65761130296600595518755516001870155600286019060018060a01b039051166bffffffffffffffffffffffff60a01b82541617905551600385015551600484015551151591019060ff801983541691151516179055565b826000526002602052604060002060018060a01b033316600052602052604060002061132f858254611b5e565b905560405193845260208401527f019885652a4a8dfdfca02c68db30c0e34d05185a6ffcd7779d140e33d1a2a90c60403394a4005b346101e25760003660031901126101e2576001546000805b8281106113e8575061138d90611c1f565b906000805b8281106113a75760405180610e3f86826117e3565b6113b0816119c5565b50600201546001600160a01b031633146113cd575b600101611392565b906113e0600191610e7a610e74856119c5565b9190506113c5565b6113f1816119c5565b50600201546001600160a01b0316331461140e575b60010161137c565b9061141a600191611bf9565b919050611406565b346101e25760203660031901126101e2576004356114436001548210611b78565b61144c816119c5565b5060028101546001600160a01b031633036114da57600581019061147360ff835416611bb7565b600160038201549101546000526002602052604060002060018060a01b0333166000526020526114a96040600020918254611b6b565b9055805460ff191690557fcd8504889bbebfbd5b4e87d5550948fedab56dea9df7b40e7d8f6106b2e913af600080a2005b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c79207468652073656c6c65722063616e2063616e63656c20746865206f604482015263393232b960e11b6064820152608490fd5b346101e25760203660031901126101e2576115b561154a60043561185b565b5060058101546006820154600783015460ff600885015416916115df61157260018701611921565b956115d161158260028301611921565b916115c361159e600461159760038501611921565b9301611921565b936040519b8c9b6101008d526101008d01906117a2565b908b820360208d01526117a2565b9089820360408b01526117a2565b9087820360608901526117a2565b93608086015260a085015260c0840152151560e08301520390f35b346101e25760203660031901126101e257608061161860043561185b565b5060ff600882015460081c1690600981015490600b600a820154910154916040519315158452602084015260408301526060820152f35b346101e25760203660031901126101e2576004356000526002602052604060002060018060a01b0333166000526020526020604060002054604051908152f35b6116983661178c565b906116a28161185b565b506116b360ff600883015416611a60565b6116be831515611aa5565b6006810190815490818511611747576116e8916116e361060d60078894015484611af1565b611b5e565b9055806000526002602052604060002060018060a01b0333166000526020526040600020611717838254611b6b565b90556040519182527ff447ba1e674406290752c644bdc71e4be50aa21042f65ed5e9a0b140a3835e2660203393a3005b60405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c6500000000006044820152606490fd5b60409060031901126101e2576004359060243590565b919082519283825260005b8481106117ce575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016117ad565b602060408183019282815284518094520192019060005b8181106118075750505090565b909192602060c060019260a087518051835284810151858401528580831b03604082015116604084015260608101516060840152608081015160808401520151151560a082015201940191019190916117fa565b600054811015611895576000808052600c919091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630191565b634e487b7160e01b600052603260045260246000fd5b90600182811c921680156118db575b60208310146118c557565b634e487b7160e01b600052602260045260246000fd5b91607f16916118ba565b60c081019081106001600160401b03821117610b8757604052565b90601f801991011681019081106001600160401b03821117610b8757604052565b9060405191826000825492611935846118ab565b80845293600181169081156119a3575060011461195c575b5061195a92500383611900565b565b90506000929192526020600020906000915b81831061198757505090602061195a928201013861194d565b602091935080600191548385890101520191019091849261196e565b90506020925061195a94915060ff191682840152151560051b8201013861194d565b6001548110156118955760016000526006602060002091020190600090565b60409060031901126101e257600435906024356001600160a01b03811681036101e25790565b81601f820112156101e2578035906001600160401b038211610b875760405192611a3e601f8401601f191660200185611900565b828452602083830101116101e257816000926020809301838601378301015290565b15611a6757565b60405162461bcd60e51b815260206004820152601660248201527550726f7065727479206973206e6f742061637469766560501b6044820152606490fd5b15611aac57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b81810292918115918404141715611b0457565b634e487b7160e01b600052601160045260246000fd5b15611b2157565b60405162461bcd60e51b8152602060048201526015602482015274125b98dbdc9c9958dd08185b5bdd5b9d081cd95b9d605a1b6044820152606490fd5b91908203918211611b0457565b91908201809211611b0457565b15611b7f57565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081bdc99195c88125160821b6044820152606490fd5b15611bbe57565b60405162461bcd60e51b81526020600482015260136024820152724f72646572206973206e6f742061637469766560681b6044820152606490fd5b6000198114611b045760010190565b6001600160401b038111610b875760051b60200190565b90611c2982611c08565b611c366040519182611900565b8281528092611c47601f1991611c08565b019060005b828110611c5857505050565b602090604051611c67816118e5565b60008152600083820152600060408201526000606082015260006080820152600060a082015282828501015201611c4c565b80518210156118955760209160051b010190565b90604051611cba816118e5565b825481526001830154602082015260028301546001600160a01b03166040820152600383015460608201526004830154608082015260059092015460ff16151560a0830152565b15611d0857565b60405162461bcd60e51b815260206004820152601b60248201527f596f7520646f6e2774206f776e20656e6f75676820746f6b656e7300000000006044820152606490fd5b8115611d57570490565b634e487b7160e01b600052601260045260246000fdfea26469706673582212205ea136d77c5013e09ef8a546511777c84023ff2d688e0cad3cb62f9fd6ca3f2364736f6c634300081c0033";

type RealEstateBuyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RealEstateBuyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RealEstateBuy__factory extends ContractFactory {
  constructor(...args: RealEstateBuyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RealEstateBuy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RealEstateBuy__factory {
    return super.connect(runner) as RealEstateBuy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RealEstateBuyInterface {
    return new Interface(_abi) as RealEstateBuyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RealEstateBuy {
    return new Contract(address, _abi, runner) as unknown as RealEstateBuy;
  }
}
